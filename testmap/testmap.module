<?php
/**
 * Retrieve data from the table = 'osmap'
 */
 function map_select_data(){
    $table = 'osmap';
	$osmap_true = 1;
	$query = ('SELECT * FROM '. $table. ' WHERE ' . $osmap_true);
	try {
         $result = db_query($query);
	}
	catch(Exception $e)
	{
	  drupal_set_message(t('db_query failed. Message = %message, query=%query', 
	           array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
	}
	return $result->fetchAll();
	}
	
/**
 * Insert location values into the table
 */
function map_insert_data($mapValues){
  $dataInsert = NULL;
  $table = 'osmap';
  try {
        $dataInsert = db_insert($table)
	                ->fields($mapValues)
					->execute();
     }
  catch(Exception $e)
  {
    drupal_set_message(t('db_insert failed. Message = %message, query=%query', 
	           array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
  }
 return $dataInsert;
}

function map_update_data($mapValues){
  try {
     $updated = db_update('osmap')
	          ->fields($mapValues)
			  ->condition('id',$mapValues['id'])
			  ->execute();  
  }
  catch (Exception $e){
     drupal_set_message(t('db_update failed. Message = %message, query=%query', 
	           array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
  }
  return $updated;

}

/**
 * Returns the latitude of a location
 */
function get_latitude($add){
        $prepAddr = str_replace(' ','+',$add);
        $geocode=file_get_contents('http://maps.google.com/maps/api/geocode/json?address='.$prepAddr.'&sensor=false');
        $output= json_decode($geocode);
        $latitude = $output->results[0]->geometry->location->lat;
        return $latitude;
}
/**
 * Returns the longitude of a location
 */
function get_longitude($add){
        $prepAddr = str_replace(' ','+',$add);
        $geocode=file_get_contents('http://maps.google.com/maps/api/geocode/json?address='.$prepAddr.'&sensor=false');
        $output= json_decode($geocode);
        $longitude = $output->results[0]->geometry->location->lng;
		return $longitude;     
}

/**
 * hook_menu for map
 */	
function testmap_menu(){
	
    $items = array();
    $items['testmap'] = array(
        'title' => 'Map',
        'description' => 'Displays map, enables addition, deletion and updation of locations',
        'page callback' => 'mapShow', 
		'access callback' => TRUE,
		);
	$items['testmap/map']=array(
	    'title' => 'Map Display',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => -10,
    );	
     $items['testmap/list'] =array(
	   'title' => 'Locations List',
	   'type' => MENU_LOCAL_TASK,
	   'weight' => -9,
	   'page callback' => 'locationList',
	   'access callback' => TRUE,
	 );
	 $items['testmap/add'] = array (
	   'title' => 'Add New Location',
	   'type' => MENU_LOCAL_TASK,
	   'weight' => -8,
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('testmap_form_add'),
	   'access callback' => TRUE,
	 );
	 $items['testmap/update'] = array (
	   'title' => 'Update Location',
	   'type' => MENU_LOCAL_TASK,
	   'weight' => -7,
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('testmap_form_update'),
	   'access callback' => TRUE,
	 );
	 $items['testmap/delete/%'] = array (
	   'page callback' => 'deleteLocation',
	   'page arguments' => array(2,3),
	   'access callback' => TRUE,
     );
	 
	return $items;
}
/**
 * Delete the selected location from the table = 'osmap'. 
 * The deletion sets the 'active' status to 0 and hence the location
 * does not get displayed
 */
function deleteLocation($id,$name){
     try {
            $success= db_delete('osmap')
					 ->condition('id', $id)
		          	 ->execute();
			drupal_set_message(t('Successfully deleted '.$name));		 
			drupal_goto($_GET['destination']);
	     }
	 catch(Exception $e)
	     {
	        drupal_set_message(t('db_query failed. Message = %message, query=%query', 
	           array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
	    }
 }
  
/**
 * adds new location to the table
 */  
function testmap_form_add($form, &$form_state){
  $form = array();
  $latitude = '';
  $longitude ='';

  $form['add'] = array(
    '#type' => 'fieldset',
	'#title' => t('Add new Location'),
  );
  $form['add']['name'] = array(
    '#type' => 'textfield' ,
	'#title' =>'Name',
	'#required' => TRUE,
	'#attributes' =>array('placeholder' => t('Harvard Web Publishing')),
	'#size' => 40,
  );
  $form['add']['address'] = array(
    '#type' => 'textfield',
	'#title' => 'Address',
	'#required' => TRUE,
	'#attributes' =>array('placeholder' => t('125 Mount Auburn Street, Cambridge, MA')),
	'#size' => 50,
  ); 
  $form['add']['type'] = array(
   '#type' => 'textfield',
   '#title' => 'Type',
   '#required' => TRUE,
   '#attributes' =>array('placeholder' => t('university, office, business')),
   '#size' => 10,
  );
  $form['add']['type'] = array(
   '#type' => 'textfield',
   '#title' => 'Type',
   '#required' => TRUE,
   '#attributes' =>array('placeholder' => t('university, office, business')),
   '#size' => 10,
  );
 $form['add']['submit'] =array (
   '#type' => 'submit',
   '#value' => t('Add'),
  );
  
  return $form;
 }
 
 /**
 * checks validity of the fields and if correct inserts into the database
 */
 function testmap_form_add_submit($form, &$form_state){
      try {
        	$mapValues = array(
				'name' => $form_state['values']['name'],
				'address' => $form_state['values']['address'],
				'lat' => get_latitude($form_state['values']['address']),
				'lng' => get_longitude($form_state['values']['address']),
				'type' => strtolower($form_state['values']['type']),
				);
	
	       $returnValue = map_insert_data($mapValues);
	/*        if ($returnValue) { 
	            drupal_set_message(t('Successfully added new location'));
	           }   */
          }
      catch (Exception $e){
           drupal_set_message(t('db_query failed. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');

          }   
 }
 
 /**
 * Displays values of the location in a table
 */
function locationList(){
   $output ='';
   $entries = map_select_data();
   
   if ($entries){
    $rows = array();
	
	$header = array(t('Id'), t('Name'),t('Address'), t('Lat'), t('Lng'),t('Type'), t('Delete'));
	foreach ($entries as $entry){
	   $options = array('query' => drupal_get_destination(),);
                $rows[] = array(
                       $entry->id, 
                       $entry->name, 
					   $entry->address,
					   $entry->lat,
					   $entry->lng,
					   $entry->type,
                       l(t('Delete'), "testmap/delete/".$entry->id ."/".$entry->name,$options),
                );
            }
	
/*	foreach ($entries as $entry){
	  $rows[] = array_map('check_plain', (array)$entry);
	}*/
	
	$output .= theme('table', array('header' => $header, 'rows'=>$rows));
	}
	else
	 {
	   drupal_set_message(t('No locations have been added yet.'));
	 }
   
    return $output;
   }

 /**
 * display the map with all the locations present in the table
 */
function mapShow(){
	$entries = map_select_data();
	$build = array(
	  '#markup' => '<div id="googleMap" style="width: 70%; height: 400px;"></div>',
	  '#attached' => array (
	     'js' => array (
		    'https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false' => array('type' => 'external',),
	        drupal_get_path('module', 'testmap') . '/testmap.js' ,
			array(
				'type' => 'setting',
				'data' => array(
					'testmap' => $entries
					)
				)
			)
			
			),
     );  
		 
	return $build;	  
}







