<?php
require_once('testmap.dbfunctions.inc');
require_once('testmap.helperfunctions.inc');
/**
 * hook_menu for map
 */	
function testmap_menu(){
	
    $items = array();
    $items['testmap'] = array(
        'title' => 'Map',
        'description' => 'Displays map, enables addition, deletion and updation of locations',
        'page callback' => 'mapShow', 
		'access callback' => TRUE,
		);
	$items['testmap/map']=array(
	    'title' => 'Map Display',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => -10,
    );	
     $items['testmap/list'] =array(
	   'title' => 'Locations List, Delete & Edit',
	   'type' => MENU_LOCAL_TASK,
	   'weight' => -9,
	   'page callback' => 'locationList',
	   'access callback' => TRUE,
	 );
	 $items['testmap/add'] = array (
	   'title' => 'Add New Location',
	   'type' => MENU_LOCAL_TASK,
	   'weight' => -8,
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('testmap_form_add'),
	   'access callback' => TRUE,
	 );
	 $items['testmap/delete/%'] = array (
	   'page callback' => 'deleteLocation',
	   'page arguments' => array(2,3),
	   'access callback' => TRUE,
     );
	 $items['testmap/update/%id'] = array (
	   'title' => 'Update Location',
	   'type' => MENU_LOCAL_TASK,
	   'weight' => -7,
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('testmap_form_update',2),
	   'access callback' => TRUE,
	 );
	 
	return $items;
}

/**
 * update submit form
 */
function testmap_form_update_submit($form, &$form_state){
    $updatingId=($form['table']['#id']);
	$lat_lng = get_latitude_longitude($form_state['values']['address']);
    $mapValues =  return_map_values($form_state['values']['name'], $form_state['values']['address'],
	                                $form_state['values']['type'], $lat_lng['lat'], $lat_lng['lng']
									);
   try {
      $count = map_update_data($mapValues, $updatingId);
      drupal_set_message(t("Updated location @mapValue (@count row updated)", 
	                     array('@count' => $count, '@mapValue' =>print_r($mapValues['name'], TRUE))));
	  }
   catch (Exception $ex)
    {
       drupal_set_message(t('db_update failed. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
      }
}

/**
 * Delete the selected location from the table = 'osmap'. 
 */ 
function deleteLocation($id,$name){
     $deleted = map_delete_data($id);
	 if ($deleted){
	        drupal_set_message(t('Successfully deleted '.$name));		 
            drupal_goto($_GET['destination']);
      }			
	  else {
	         drupal_set_message(t('db_update failed. Message = %message, query=%query', 
	         array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
	  }
 }
  
/**
 * adds new location to the table
 */  
function testmap_form_add($form, &$form_state){
    return create_form($form, 'add');
 }
 
 /**
 * checks validity of the fields and if correct inserts into the database
 */
 function testmap_form_add_submit($form, &$form_state){
  	//print_r formatted version of the array and var_dump but with more detail
    $lat_lng = get_latitude_longitude($form_state['values']['address']);
	$mapValues =  return_map_values($form_state['values']['name'], $form_state['values']['address'],
	                                $form_state['values']['type'], $lat_lng['lat'], $lat_lng['lng']
									);
    if (preg_match('/^[a-zA-Z\s]+$/', $form_state['values']['name']))
	{
	  try {
				$returnValue = map_insert_data($mapValues);
			    drupal_set_message(t('Successfully added new location: '.$mapValues['name']));
	     }
		 catch (Exception $e){
                drupal_set_message(t('db_insert failed. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');

          }   
	 }
	 else
	 {
	   drupal_set_message(t("Name can only contain alpha characters and space"),'error');
	 }       
 }
 
 /**
 * Displays values of the location in a table
 */
function locationList(){
   $output ='';
   $mapValues = map_select_data();
   try {  
   
        if ($mapValues){
          $rows = array();
	      $header = array(t('Name'),t('Address'), t('Lat'), t('Lng'),t('Type'), t('Delete'), t('Edit'));
	      foreach ($mapValues as $mapValue){
	            $options = array('query' => drupal_get_destination(),);
                $rows[] = array(
                       $mapValue->name, 
					   $mapValue->address,
					   $mapValue->lat,
					   $mapValue->lng,
					   $mapValue->type,
                       l(t('Delete'), "testmap/delete/".$mapValue->id ."/".$mapValue->name,$options),
					   l(t('Edit'), "testmap/update/".$mapValue->id)				   
					   
                );
            }
	     $output .= theme('table', array('header' => $header, 'rows'=>$rows));
	   }
	}
	catch (Exception $e){
	   drupal_set_message(t('No locations have been added yet.'), 'error');
	 }
   
    return $output;
   }
   
    /**
 * display the map with all the locations present in the table
 */
function mapShow(){
  try {
 	 $mapValues = map_select_data();
     $build = array(
	  '#markup' => '<div id="googleMap" style="width: 80%; height: 500px;"></div>',
	  '#attached' => array (
	     'js' => array (
		    'https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false' => array('type' => 'external',),
	        drupal_get_path('module', 'testmap') . '/testmap.js' ,
			array(
				'type' => 'setting',
				'data' => array(
					'testmap' => $mapValues
					)
				)
			)		
		),
     );  
   }
  catch (Exception $ex)
    {
       drupal_set_message(t('Error in displaying the map. Apologize for the inconvenience. Please contact admin/support'));
    }	
	return $build;	  
}






